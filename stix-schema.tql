define
stix-object sub entity, 
	# Required
	owns stix-type,
	owns stix-id,
	plays stix-core-relationship:active-role,
	plays stix-core-relationship:passive-role;

	stix-core-object sub stix-object, 
		# Required for SDO but Optional for SCO
		owns spec-version,

		# Optional
		owns extensions,

		plays object-marking:marked,
		plays creation:created,
		plays sighting:sighting-of,

		# Common relations for SDOs and SCOs. Defined in 3.7. 
		plays derivation:derived-from,
		plays derivation:deriving,
		plays duplicate:duplicated-object,
		plays relatedness:related-to;

			stix-domain-object sub stix-core-object, 
				# Required
				owns created,
				owns modified, 

				# Optional
				owns revoked, 
				owns labels,
				owns confidence,
				owns langs,
				plays external-referencing:referencing,

				plays indication:indicated;

			stix-cyber-observable-object sub stix-core-object,
				owns defanged, 
				plays reference:referred;

	stix-meta-object sub stix-object, 
		abstract, 
		owns created, 
		owns modified;

##### 2 Common Data Types #####

# 2.5 External Reference
external-reference sub stix-meta-object,
	# In addition to source-name, at least one of description, url or external-id must be present
	# Required
	owns source-name, 

	# Optional
	owns description,
	owns url, 
	owns external-id,
	owns hash-general,
	plays external-referencing:referenced;

external-referencing sub relation, 
	relates referenced,
	relates referencing;

# 2.7 Hash
hash sub stix-attribute-string, abstract; 
	hash-general sub hash;
	md5 sub hash;
	sha-1 sub hash;

# 2.11 Kill Chane Phase
kill-chain-usage sub stix-core-relationship,
	relates kill-chain-used,
	relates kill-chain-using;

kill-chain-phase sub stix-meta-object,
	owns kill-chain-name, 
	owns phase-name,
	plays kill-chain-usage:kill-chain-using,

	# inferred role player
	plays kill-chain:participating-kill-chain-phase;

##### 4 STIX™ Domain Objects #####

# Custom object
custom-object sub stix-domain-object,
	owns name, 
	owns description, 
	owns alias, 
	owns first-seen,
	owns last-seen,
	owns objective,
	plays kill-chain-usage:kill-chain-used,
	plays delivery:delivering,
	plays target:targetting,
	plays use:used-by,
	plays mitigation:mitigated,
	plays use:used;


# 4.1 
attack-pattern sub stix-domain-object,
	# Attack Pattern Specific Properties
	owns name,
	owns description,
	owns alias,
	plays kill-chain-usage:kill-chain-used,

	# Relations
	plays delivery:delivering,
	plays target:targetting,
	plays use:used-by,

	# Reverse
	plays mitigation:mitigated,
	plays use:used; 

# 4.2 Campaign
campaign sub stix-domain-object, 
	owns name, 
	owns description, 
	owns alias, 
	owns first-seen,
	owns last-seen,
	owns objective;

# 4.3 Course of Action
course-of-action sub stix-domain-object,
	owns name, 
	owns description, 
	owns action,
	plays mitigation:mitigating;

# 4.4 Grouping 
grouping sub stix-domain-object; #TODO

# 4.5 Identity
identity sub stix-domain-object,
	owns name, 
	owns description, 
	owns stix-role,
	owns sector,  # should this perhaps be a relation?
	owns contact-information,
	plays creation:creator,
	plays attribution:attributed, 
	plays sighting:saw,
	plays target:targetted;

	# 10.7 Identity Class Vocabulary
	individual sub identity;
	group sub identity;
	system sub identity;
	organization sub identity;
	class sub identity;
	id-unknown sub identity;

# 4.6 Incident
incident sub stix-domain-object; #TODO

# 4.7 Indicator
indicator sub stix-domain-object, 
	owns name, 
	owns description, 
	owns indicator-type, # I think this shoudl be a relation to the OV: anomalous-activity, anonymization, benign, compromised, malicious-activity, attribution, unknown
	owns pattern, 
	owns pattern-type, # should this OV be a relation? (stix, pcre, sigma, snort, suricata, yara)
	owns pattern-version,
	owns valid-from,
	owns valid-until,
	plays indication:indicating,
	plays kill-chain-usage:kill-chain-used;

# 4.8 Infrastructure
infrastructure sub stix-domain-object,
	plays kill-chain-usage:kill-chain-used;

# 4.9 Intrusion Set
intrusion-set sub stix-domain-object, # TODO
	owns name, 
	owns description, 
	owns alias, 
	owns first-seen,
	owns last-seen,
	owns goals, 
	owns resource-level, 
	owns primary-motivation, 
	owns secondary-motivations,

	plays use:used-by; 

# 4.10 Location
location sub stix-domain-object,
	plays target:targetted;

# 4.11 Malware
malware sub stix-domain-object, 
	owns name, 
	owns description, 
	owns malware-type, 
	owns is-family, 
    owns alias,
    owns first-seen,
    owns last-seen,
    owns operating-system-refs,
    owns architecture-execution-envs,
    owns implementation-languages,
    owns capability,
    owns sample-refs,
    plays use:used-by,
    plays use:used,
	plays kill-chain-usage:kill-chain-used,
	plays delivery:delivered;

# 4.12 Malware Analysis
malware-analysis sub stix-domain-object; # TODO

# 4.13 Note
note sub stix-domain-object; #TODO

# 4.14
observed-data sub stix-domain-object,
	owns first-observed, 
	owns last-observed, 
	owns number-observed,
	owns object,
	plays sighting:observed,
	plays reference:referring;

# 4.15 Opinion
opinion sub stix-domain-object; #TODO

# 4.16 Report
report sub stix-domain-object; #TODO

# 4.17
threat-actor sub stix-domain-object,
	owns name, 
	owns description, 
	owns threat-actor-type,
	owns alias,
	owns first-seen,
	owns last-seen,
	owns stix-role,
	owns goals,
	owns sophistication,
	owns resource-level, 
	owns primary-motivation,
	owns secondary-motivations,
	owns personal-motivations,
	plays attribution:attributing,
	plays use:used-by;

# 4.18 Tool
tool sub stix-domain-object, # TODO
	owns name,
	owns description,
	owns tool-type,
	owns alias, 
	owns tool-version,
	plays use:used-by,
	plays use:used,
	plays kill-chain-usage:kill-chain-used;

# 4.19 Vulnerability
#vulnerability sub relation,
# 	plays target:targetted;

##### 5 STIX™ Relationship Objects #####

# 5.2 Sighting
sighting sub stix-core-relationship, 
	owns description,
	owns first-seen,
	owns last-seen,
	owns count,
	owns summary,
	relates saw,
	relates sighting-of, 
	relates observed;

##### 6 STIX™ Cyber-observable Objects ##### 

# 6.1 Artifact Object

# 6.2 Autonomous System Object

# 6.3 Directory Object

# 6.4 Domain Name Object

# 6.5 Email Address Object

# 6.6 Email Message

# 6.7 File
file sub stix-cyber-observable-object,
	owns size,
	owns name, 
	owns hash-general,
	owns md5,
	owns sha-1;

# 6.8 IPv4 Address

# 6.9 IPv6 Address

# 6.10 MAC Address

# 6.11 Mutex

# 6.12 Network Traffice

# 6.13 Process 

# 6.14 Software

# 6.15 URL

# 6.16 User Account

# 6.17
windows-registry-key sub stix-cyber-observable-object, 
	owns attribute-key, 
	owns values, 
	owns modified-time, 
	owns number-subkeys, 
	owns values;

# 6.18 X.509 Certificate

##### 7 STIX™ Meta Objects #####

# 7.1 Language Content 

# owns spec-version

# 7.2 Data markings - this describes how data can be used/shared

marking-definition sub stix-meta-object,
	owns name, 
	owns spec-version,
	plays creation:created,
	plays data-marking:marking;

	statement-marking sub marking-definition, 
		owns statement; 

	tlp-marking sub marking-definition;
		tlp-white sub tlp-marking;
		tlp-green sub tlp-marking;
		tlp-amber sub tlp-marking;
		tlp-red sub tlp-marking;


data-marking sub relation, 
	relates marking,
	relates marked;

	object-marking sub data-marking; 

	granular-marking sub data-marking; 

# 7.3 Extension Definition

##### RELATIONSHIPS - APENDIX B #####

stix-core-relationship sub relation, # in conceptMapper
	# Required
	owns spec-version,
	owns stix-id, 
	owns created,
	owns modified,
	owns stix-type,

	# Optional
	# owns created-ref, -> TODO
	owns revoked,
	owns labels,
	owns confidence, 
	owns langs,
	owns extensions, 
	relates active-role, 
	relates passive-role,
	plays object-marking:marked;


	delivery sub stix-core-relationship, # in conceptMapper
		relates delivering, 
		relates delivered;

	target sub stix-core-relationship, # in conceptMapper
		relates targetting,
		relates targetted;

	attribution sub stix-core-relationship, # in conceptMapper
		relates source, 
		relates target-identity,
		relates attributing,
		relates attributed; 

	mitigation sub stix-core-relationship,# in conceptMapper
		relates mitigated,
		relates mitigating;

	indication sub stix-core-relationship, # in conceptMapper
		relates indicating,
		relates indicated; 

	creation sub stix-core-relationship, 
		relates created,
		relates creator;

	reference sub stix-core-relationship, 
		relates referred,
		relates referring;

	use sub stix-core-relationship,# in conceptMapper
		relates used-by,
		relates used;

# 3.7 Common Relationships 
# These are relation types that are shared by SDOs and SCOs

derivation sub relation,  # in conceptMapper
	relates derived-from,
	relates deriving;

duplicate sub relation, # in conceptMapper
	relates duplicated-object; 

relatedness sub relation,# in conceptMapper
	relates related-to; 


## INFERRED RELATIONS ## 

kill-chain sub relation, 
	relates participating-kill-chain-phase; 

##### ATTRIBUTES #####

stix-attribute-string sub attribute, value string, abstract,
	plays granular-marking:marked;

	stix-type sub stix-attribute-string;
	stix-id sub stix-attribute-string;
	object-marking-refs sub stix-attribute-string;
	created sub stix-attribute-string;
	modified sub stix-attribute-string;
	revoked sub stix-attribute-string;
	labels sub stix-attribute-string;
	confidence sub stix-attribute-string;
	langs sub stix-attribute-string;
	defanged sub stix-attribute-string;
	extensions sub stix-attribute-string;
	source-name sub stix-attribute-string;
	description sub stix-attribute-string;
	url sub stix-attribute-string;
	external-id sub stix-attribute-string;

	kill-chain-name sub stix-attribute-string; 
	phase-name sub stix-attribute-string; 
	name sub stix-attribute-string; 
	sector sub stix-attribute-string; 
	contact-information sub stix-attribute-string; 
	indicator-type sub stix-attribute-string; 
	pattern sub stix-attribute-string; 
	pattern-type sub stix-attribute-string; 
	pattern-version sub stix-attribute-string; 
	valid-from sub stix-attribute-string; 
	valid-until sub stix-attribute-string; 

	malware-type sub stix-attribute-string; 
	first-seen sub stix-attribute-string; 
	last-seen sub stix-attribute-string; 
	operating-system-refs sub stix-attribute-string; 
	architecture-execution-envs sub stix-attribute-string; 
	implementation-languages sub stix-attribute-string; 
	capability sub stix-attribute-string; 
	sample-refs sub stix-attribute-string; 

	first-observed sub stix-attribute-string; 
	last-observed sub stix-attribute-string; 
	object sub stix-attribute-string; 

	threat-actor-type sub stix-attribute-string; 
	alias sub stix-attribute-string; 
	first-seen sub stix-attribute-string; 
	last-seen sub stix-attribute-string; 
	stix-role sub stix-attribute-string; 
	goals sub stix-attribute-string; 
	sophistication sub stix-attribute-string; 
	resource-level sub stix-attribute-string; 
	primary-motivation sub stix-attribute-string; 
	secondary-motivations sub stix-attribute-string; 
	personal-motivations sub stix-attribute-string; 

	first-seen sub stix-attribute-string; 
	last-seen sub stix-attribute-string; 
	summary sub stix-attribute-string; 

	spec-version sub stix-attribute-string; 
	 
	attribute-key sub stix-attribute-string; 
	values sub stix-attribute-string; 
	modified-time sub stix-attribute-string; 
	number-subkeys sub stix-attribute-string; 
	values sub stix-attribute-string; 
	objective sub stix-attribute-string;
	statement sub stix-attribute-string;
	action sub stix-attribute-string;  
	tool-type sub stix-attribute-string; # OPEN VOCAB?
	tool-version sub stix-attribute-string; 

stix-attribute-long sub attribute, value long, abstract,
	plays granular-marking:marked;		

	size  sub stix-attribute-long; 
	count sub stix-attribute-long; 
	number-observed sub stix-attribute-long; 

stix-attribute-boolean sub attribute, value boolean, abstract, 
	plays granular-marking:marked;
	
	is-family sub stix-attribute-boolean;
	

##### Rules #####

rule part-of-one-kill-chain:
when {
	$kill-chain-1 isa kill-chain-phase, has kill-chain-name $x;
	$kill-chain-2 isa kill-chain-phase, has kill-chain-name $x;
	not {$kill-chain-1 is $kill-chain-2;};
} then {
	(participating-kill-chain-phase: $kill-chain-1, participating-kill-chain-phase: $kill-chain-2) isa kill-chain;
};

